// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prompt template generate chart prompt template should work 1`] = `
"# TypeScript
type Column = string;
interface Chart { title: string }
interface PieChart extends Chart { label: Column; value: Column }
interface LineChart extends Chart { x: Column; y: Column | Column[]; }
interface BarChart extends Chart  { x: Column; y: Column | Column[]; }
interface MapChart extends Chart  { country_code: Column; value: Column; }
interface NumberCard extends Chart  { value: Column;}
interface RepoCard extends Chart  { repo_id: Column; repo_name: Column; }
interface PersonalCard extends Chart  { repo_id: Column; repo_name: Column; }
interface Table extends Chart  { columns: Column[]; }
# Example
Question: How many contributors in @pingcap/tidb
Data: [{"contributors": 378}]
Chart: {"type": "NumberCard", "title": "Number of Contributors in @pingcap/tidb", "value": "contributors"}
# Example
Question: The star history of @pingcap/tidb
Data: [{event_month: "2015-09-01", repo_id: 41986369, total: 2541}]
Chart: {"title": "The Star History of @pingcap/tidb", "chartName": "LineChart", "x": "event_month", "y": "total"}
# Example
Question: Geographic distribution of contributors to @pingcap/tidb  
Data: [{country_or_area: "CN", count: 8883, percentage: 0.5971}]
Chart: {"title": "The Geographic Distribution of Contributors to @pingcap/tidb ","chartName": "MapChart","country_code": "country_or_area","value": "count"}
# Example
Question: The open source projects similar to tidb?
Data: [{repo_id: 41986369, repo_name: "pingcap/tidb"}, {repo_id: 48833910, repo_name: "tilv/tikv"}]
Chart: {"title": "The Repository List Similar to pingcap/tidb","chartName": "RepoCard","repo_id": "repo_id","repo_name": "repo_name"}
# Example
Question: Who has given the most stars on github?
Data: [{id: 5086433, actor_login: "Mini256"}]
Chart: {"title": "The People Who Given the Most Stars on GitHub","chartName": "PersonalCard","id": "id","login": "actor_login"}
# Example
Question: The most popular programming languages in @pingcap/tidb
Data: [{"language": "Go", "percentage": 0.7}, {"language": "Rust", "percentage": 0.3}]
Chart:{"title": "The Most Popular Programming Languages in @pingcap/tidb","chartName": "PieChart","label": "language","value": "percentage"}
---
Question: The commits and pushes in @pingcap/tidb across months
Data: [{"commits":671,"event_month":"2015-09-01","pushes":521},{"commits":561,"event_month":"2015-10-01","pushes":426},{"commits":546,"event_month":"2015-11-01","pushes":399},{"commits":478,"event_month":"2015-12-01","pushes":343}]
Chart: 
"
`;

exports[`prompt template query playground prompt template should work 1`] = `
"# MySQL SQL
Table github_events, columns = [id, type, created_at, repo_id, repo_name, actor_id, actor_login, language, additions, deletions, action, number, org_login, org_id, state, closed_at, comments, pr_merged_at, pr_merged, pr_changed_files, pr_review_comments, pr_or_issue_id, push_size, push_distinct_size, creator_user_login, creator_user_id, pr_or_issue_created_at]
Column type, enums = ['PullRequestEvent', 'PushEvent', 'IssueCommentEvent', 'IssuesEvent', 'PullRequestReviewCommentEvent', 'WatchEvent', 'CreateEvent', 'DeleteEvent', 'ForkEvent', 'ReleaseEvent']
Column number, number is issue number
Table github_repos, columns = [repo_id, repo_name, owner_id, owner_login, owner_is_org, description, primary_language, license, size, stars, forks, parent_repo_id, is_fork, is_archived, is_deleted, latest_released_at, pushed_at, created_at, updated_at]
Column primary_language, invalid = [null, '']
Table github_users, columns = [id, login, type, name, organization, country_code, followers, followings, created_at, updated_at]
Column type, enums = ['USR', 'ORG']
Column country_code, invalid = ['', 'N/A', 'UND']
Table collections, columns = [id, name]
Table collection_items, columns = [collection_id, repo_id, repo_name]
Table trending_repos, columns = [repo_name, created_at]
Table github_repo_topics, columns = [repo_id, topic]
Relation collections.id = collection_items.collection_id
Relation collection_items.repo_id = github_repos.repo_id
Relation github_events.repo_id = github_repos.repo_id
Relation github_events.repo_name = github_repos.repo_name
Relation github_events.actor_id = github_users.id
Relation github_events.actor_login = github_users.login
Relation github_events.creator_user_id = github_users.id
Relation github_repos.owner_id = github_users.id
Relation github_repos.repo_id = github_repo_topics.repo_id
Relation trending_repos.repo_name = github_repos.repo_name

Select statement limit 20 by default, if question need more data, please add limit 200
When type = 'PullRequestReviewCommentEvent' or type = 'IssueCommentEvent', the action could be 'created'
When type = 'PullRequestEvent' or type = 'IssuesEvent', the action could be 'opened', 'closed'
When type = 'PullRequestEvent', action = 'closed' and pr_merged = 1, it means the pull request is merged
PushEvent: trigger when commit has been pushed
Return the pr_or_issue_link column for PR / issue list: SELECT CONCAT('https://github.com/', repo_name, '/issues/', number) AS pr_or_issue_link
Exclude bots: WHERE actor_login NOT LIKE "%bot%"
Contributor: the person who opened pull request to the repo, it will trigger a PullRequestEvent
The most popular repos has the most stars,
Similar repositories will have similar topics, or be in the same collection, order by the similarity
collection is a categorization of some similar repositories, but not all repositories have a corresponding collection
The trending_repos table contains the most recent and popular repositories
---
-- The repos about ChatGPT
SELECT gr.repo_id, gr.repo_name FROM github_repos gr WHERE gr.description LIKE '%ChatGPT%';
-- @pingcap/tidb cumulative stars across months
SELECT t_month, stars, SUM(stars) OVER(ORDER BY t_month ASC) AS cumulative_stars FROM ( SELECT DATE_FORMAT(created_at, '%Y-%m-01') AS t_month, COUNT(DISTINCT actor_login) AS stars FROM github_events ge WHERE ge.type = 'WatchEvent' AND ge.repo_id = (SELECT repo_id FROM github_repos WHERE repo_name = 'pingcap/tidb') GROUP BY t_month ) star_counts ORDER BY t_month ASC;
---
-- Current time: 2023-01-03, don't add time filters in WHERE clause unless the question explicitly limits the time frame.
-- Let's think step by step, generate one correct SQL to do query: How many contributors in @pingcap/tidb
---

"
`;

exports[`prompt template sql playground prompt template should work 1`] = `
"# MySQL SQL
Table github_events, columns = [type, created_at, repo_id, repo_name, actor_id, actor_login, language, additions, deletions, action, number, org_login, org_id, state, closed_at, comments, pr_merged_at, pr_merged, pr_changed_files, pr_review_comments, pr_or_issue_id, push_size, push_distinct_size, creator_user_login, creator_user_id, pr_or_issue_created_at]
Column type, enums = ['PullRequestEvent', 'PushEvent', 'IssueCommentEvent', 'IssuesEvent', 'PullRequestReviewCommentEvent', 'WatchEvent', 'CreateEvent', 'DeleteEvent', 'ForkEvent', 'ReleaseEvent']
Table github_repos, columns = [repo_id, repo_name, owner_id, owner_login, owner_is_org, description, primary_language, license, size, stars, forks, parent_repo_id, is_fork, is_archived, is_deleted, latest_released_at, pushed_at, created_at, updated_at]
Relation github_events.repo_id = github_repos.repo_id
Define my_user_id = 5086433
Define my_user_login = 'Mini256'
Define this_repo_name = 'pingcap/tidb'
Define this_repo_id = 41986369

---
-- How many contributors in @pingcap/tidb
SELECT COUNT(DISTINCT creator_user_login) AS contributors FROM github_events WHERE repo_name = 'pingcap/tidb' AND type = 'PullRequestEvent' AND action = 'closed' AND pr_merged = true
-- Who am I
SELECT 'Mini256' AS user_login;
-- Am I a contributor to this repo
SELECT CASE sub.prs > 0 WHEN TRUE THEN 'Yes' ELSE 'No' END AS is_contributor FROM ( SELECT COUNT(*) AS prs FROM github_events WHERE type = 'PullRequestEvent' AND action = 'opened' AND repo_id = 41986369 AND actor_login = 'Mini256' ) AS sub;
---
-- Current time: 2023-01-03, don't add time filters in WHERE clause unless the question explicitly limits the time frame.
-- Let's think step by step, generate one correct SQL to do query: How many contributors in @pingcap/tidb
---
SELECT 
"
`;
