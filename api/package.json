{
  "name": "ossinsight-api",
  "version": "1.0.0",
  "description": "The API server for OSSInsight.",
  "main": "./dist/index.js",
  "scripts": {
    "test": "jest",
    "start": "pm2 start --cwd $(pwd) 'pnpm run server:start' --name 'ossinsight-api'",
    "stop": "pm2 stop 'ossinsight-api'",
    "restart": "pm2 restart 'ossinsight-api'",
    "remove": "pm2 delete 'ossinsight-api'",
    "prefetch:start": "pm2 start --cwd $(pwd) 'pnpm run server:prefetch' --name 'ossinsight-api-prefetch'",
    "prefetch:stop": "pm2 stop 'ossinsight-api-prefetch'",
    "prefetch:restart": "pm2 restart 'ossinsight-api-prefetch'",
    "prefetch:remove": "pm2 delete 'ossinsight-api-prefetch'",
    "gc:start": "pm2 start --cwd $(pwd) 'pnpm run server:gc' --name 'ossinsight-api-cache-gc'",
    "sync-nginx-log:start": "pm2 start --cwd $(pwd) 'pnpm run server:sync-nginx-log' --name 'ossinsight-api-sync-nginx-logs'",
    "calc-hot-collections:start": "pm2 start --cwd $(pwd) 'pnpm run server:calc-hot-collections' --name 'ossinsight-api-calc-hot-collections'",
    "postinstall": "pnpm run build",
    "build": "tsc && pnpm run build:copy",
    "build:copy": "find . -maxdepth 1 -name .env -exec cp {} ./dist \\; && cp .env.template ./dist/.env.template && cp -r ./queries ./dist/queries",
    "server:start": "node ./dist/index.js",
    "server:prefetch": "node ./dist/compute-prefetch-enums.js",
    "server:gc": "node ./dist/cache-gc.js",
    "server:sync-nginx-log": "node ./dist/sync-nginx-log.js",
    "server:calc-hot-collections": "node ./dist/calc-hot-collections.js",
    "dev": "ts-node index.ts",
    "dev:prefetch": "ts-node compute-prefetch-enums.ts",
    "dev:generate-company-name-sql": "ts-node generate-company-name-sql.ts",
    "dev:sync-nginx-log": "ts-node sync-nginx-log.ts",
    "dev:calc-hot-collections": "ts-node calc-hot-collections.ts",
    "dev:sync-users-data": "ts-node sync-users-data.ts",
    "gen:schema-ts": "json2ts params.schema.json params.schema.d.ts",
    "validate:params": "ajv -s params.schema.json -d \"queries/*/params.json\""
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@goparrot/geocoder": "^4.4.0",
    "@koa/cors": "^3.1.0",
    "axios": "^0.27.2",
    "consola": "^2.15.3",
    "dotenv": "^16.0.0",
    "generic-pool": "^3.8.2",
    "koa": "^2.13.4",
    "koa-router": "^10.1.1",
    "lru-cache": "^7.13.1",
    "luxon": "^2.3.0",
    "mysql": "^2.18.1",
    "mysql2": "^2.3.3",
    "node-schedule": "^2.1.0",
    "octokit": "^1.7.1",
    "pinyin": "3.0.0-alpha.5",
    "prom-client": "^14.0.1",
    "reflect-metadata": "^0.1.13",
    "tail": "^2.2.4",
    "tiny-async-pool": "^1.2.0",
    "yaml": "^2.0.1"
  },
  "devDependencies": {
    "@types/jest": "^28.1.6",
    "@types/koa": "^2.13.4",
    "@types/koa-router": "^7.4.4",
    "@types/koa__cors": "^3.1.1",
    "@types/luxon": "^2.0.9",
    "@types/mysql": "^2.15.21",
    "@types/node": "^17.0.45",
    "@types/node-schedule": "^2.1.0",
    "@types/tail": "^2.2.1",
    "@types/tiny-async-pool": "^1.0.0",
    "@types/validator": "^13.7.5",
    "ajv-cli": "^5.0.0",
    "jest": "^28.1.3",
    "json-schema-to-typescript": "^10.1.5",
    "ts-node": "^10.5.0",
    "typescript": "^4.5.5"
  }
}
